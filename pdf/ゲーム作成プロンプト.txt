
**ブラウザゲーム開発、始めよう！**

このプロンプトは、あなたが考えたゲームアイデアを、PCブラウザ上で素早く形にするためのものです。


まずは、必要最低限の機能を持ったMVP（Minimum Viable Product）を作成し、ゲームの核心部分を検証することを目指します。
完璧なゲームを作るのではなく、コアとなるゲームプレイを体験できるモックアップを作ることを意識しましょう。
今回は、PCブラウザで動作するゲームに限定し、質問数を減らして、よりシンプルにゲーム開発を始められるようにしました。
スコア表示は必須要件として組み込まれています。

**質問:**

1. **ゲームの目的:** プレイヤーは何を達成すればよいですか？ (例: 敵を全滅させる、ゴールに到達する、パズルを解く)
2. **コアとなるゲームプレイ:** プレイヤーはどんな操作を行いますか？ (例: 左右に移動する、ジャンプする、クリックする)
3. **勝利条件:** どのようにすればゲームクリアとなりますか？ (例: スコアが100点を超える、ボスを倒す、制限時間内にゴールする)
4. **最低限必要な要素:** ゲームを成立させるために、絶対に必要な要素は何ですか？ (例: プレイヤーキャラクター、敵キャラクター、障害物、アイテム)

**自己評価:**

上記の質問だけでは、ゲームの仕様を完全に把握することは難しい可能性があります。
特に、ゲームの進行に物理演算、コリジョン（衝突判定）、領域判定などの処理が必要かどうかについては、確認が必要です。

**追加質問:**

ゲームに以下の要素は必要ですか？ それぞれ、Yes/Noで答えてください。

* **物理演算:**  オブジェクトが重力や力によって自然に動くような表現は必要ですか？ (例: ボールが落下する、キャラクターがジャンプする)
* **コリジョン:** オブジェクト同士がぶつかった時の処理は必要ですか？ (例: プレイヤーが敵に当たるとダメージを受ける)
* **領域判定:** 特定の領域に入った時に何かが起こるような処理は必要ですか？ (例: ゴールエリアに入るとクリア)

**出力:**

**第一段階:**

あなたの回答に基づき、以下の内容を盛り込んだゲーム企画書を出力します。

* ゲームの概要
* コアとなるゲームプレイ
* 勝利条件
* 操作方法

**(ユーザー確認)** 

上記の内容で問題なければ、「OK」と回答してください。
修正を希望する場合は、変更箇所を具体的に指示してください。

**第二段階:**

ユーザーから「OK」の回答を得たら、以下のファイルを出力します。

* index.html: 必要最低限のHTML (ゲーム画面の土台)
* style.css: 必要最低限のCSS (ゲーム画面の基本的なスタイル)
* script.js: 必要最低限のJavaScript (ゲームロジック、スコア表示を含む)


**第二段階のための必須要件:**

以下の要件は、すべてのゲームに共通して含まれます。

* ゲームループの定義
* ゲームスタートボタン
* PCブラウザでの操作
* スコア表示

sa以下は制約条件です。

Reactは使ってはいけません。純粋なフラットJavascriptで記述されるscript.js を作成します。index.html には、「 <script src="script.js">」があります。
デザインはシンプルなものでOKです。グラフィックデザインは最低限です。
機能的な実現と、ソースコードの可読性を優先的に整理します。


	
**(ユーザー確認)**

出力されたコードを確認し、修正を希望する場合は、変更箇所を具体的に指示してください。
必要に応じて、HTML、CSS、JavaScriptの各ファイルの内容を更新します。
画面のイメージ確認は省略し、できるだけ早くファイル出力をすることを優先します。

**さあ、シンプルなブラウザゲーム開発を始めましょう！** 
